// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define RIG 1
#define LEF 2
#define TRI 3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LEF RIG>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W       &kp E        &kp R       &kp T        &kp Y           &kp U            &kp I        &kp O       &kp P
&ht LEFT_SHIFT A  &ht LALT S  &ht LCTRL D  &ht LGUI F  &kp G        &kp H           &ht RGUI J       &ht RCTRL K  &ht RALT L  &ht RIGHT_SHIFT ENTER
&kp Z             &kp X       &kp C        &kp V       &kp B        &kp N           &kp M            &kp COMMA    &kp DOT     &kp ESC
                                           &mo LEF     &kp SPACE    &kp BACKSPACE   &mo RIG
            >;
        };

        right_layer {
            bindings = <
&kp N1   &kp N2    &kp N3     &kp N4     &kp N5       &kp N6  &kp N7    &kp N8     &kp N9         &kp N0
&kp DEL  &kp TAB   &kp CAPS   &kp PSCRN  &kp INS      &trans  &kp LEFT  &kp DOWN   &kp UP_ARROW   &kp RIGHT
&trans   &trans    &trans     &trans     &trans       &trans  &kp HOME  &kp PG_UP  &kp PAGE_DOWN  &kp END
                              &trans     &kp SPACE    &trans  &trans
            >;
        };

        left_layer {
            bindings = <
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp GRAVE  &kp TILDE
&kp DQT   &kp LBKT  &kp LBRC  &kp LPAR  &trans       &kp FSLH   &kp MINUS  &kp EQUAL  &kp COLON  &kp SEMI
&kp SQT   &kp RBKT  &kp RBRC  &kp RPAR  &trans       &kp BSLH   &kp UNDER  &kp PLUS   &kp PIPE   &kp QMARK
                              &trans    &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 2  &out OUT_TOG   &trans  &kp C_MUTE    &kp C_NEXT
&kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp C_BRI_UP   &trans  &kp C_VOL_UP  &kp C_PP
&kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &trans  &kp C_VOL_DN  &kp C_PREV
                          &trans   &trans          &trans        &trans
            >;
        };
    };
};
